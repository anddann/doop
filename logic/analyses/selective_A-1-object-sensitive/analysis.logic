// Context-sensitive pointer analysis with context of 1 object
// (OR for static calls 1 call-site).

Context(?ctx),
ContextFromRealContext[?valueComp] = ?ctx,
ContextComponent(?valueComp),
ContextComponent:Value[?value] = ?valueComp,
ImmutableContext[] = ?ctx <-
  Value:byId["<<immutable-context>>"] = ?value.

HContext(?hctx),
HContextFromRealHContext[] = ?hctx,
ImmutableHContext[] = ?hctx.


// Create initial objects with their heap contexts
HContext(?hctx),
HContextFromRealHContext[] = ?hctx,
SystemThreadGroup(?hctx, ?alloc) <-
  Value:byId["<<system-thread-group>>"] = ?alloc.

HContext(?hctx),
HContextFromRealHContext[] = ?hctx,
MainThreadGroup(?hctx, ?alloc) <-
  Value:byId["<<main-thread-group>>"] = ?alloc.

HContext(?hctx),
HContextFromRealHContext[] = ?hctx,
MainThread(?hctx, ?alloc) <-
  Value:byId["<<main-thread>>"] = ?alloc.


// Initially reachable methods
Context(?ctx),
ContextFromRealContext[?valueComp] = ?ctx,
ContextComponent(?valueComp),
ContextComponent:Value[?value] = ?valueComp,
ReachableContext(?ctx, ?method) <-
  MainMethodDeclaration(?method),
  Value:byId["<<initial-context>>"] = ?value.

Context(?ctx),
ContextFromRealContext[?valueComp] = ?ctx,
ContextComponent(?valueComp),
ContextComponent:Value[?value] = ?valueComp,
ReachableContext(?ctx, ?method) <-
  ImplicitReachable(?method),
  Value:byId["<<jvm-startup>>"] = ?value.

Context(?ctx),
ContextFromRealContext[?valueComp] = ?ctx,
ContextComponent(?valueComp),
ContextComponent:Value[?value] = ?valueComp,
ReachableContext(?ctx, ?clinit) <-
  InitializedClass(?class),
  ClassInitializer[?class] = ?clinit,
  Value:byId["<<class-initialization>>"] = ?value.
