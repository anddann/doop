#include "macros.logic"
// For this analysis, there are no contexts, so this is
// what the initial system objects should have.
MySystemThreadGroup(?heap) -> HeapAllocation(?heap).

MyMainThreadGroup(?heap) -> HeapAllocation(?heap).

MyMainThread(?heap) -> HeapAllocation(?heap).


/*
 * Contexts
 */

Context(?ctx), Context:Value(?ctx:?s) -> string(?s).



/*
 * Declarations
 */

ArrayIndexPointsTo( ?baseheap, ?heap ) ->
	HeapAllocation( ?baseheap ),
	HeapAllocation( ?heap ).

VarPointsTo( ?heap, ?var ) ->
	HeapAllocation( ?heap ),
	Var( ?var ).

InstanceFieldPointsTo( ?heap, ?signature, ?baseheap ) ->
        HeapAllocation( ?heap ),
	FieldSignature( ?signature ),
	HeapAllocation( ?baseheap ).

StaticFieldPointsTo( ?heap, ?signature ) ->
	HeapAllocation( ?heap ),
	FieldSignature( ?signature ).

Assign( ?type, ?from, ?to ) ->
	Type( ?type ),
	Var( ?from ),
	Var( ?to ).

Reachable( ?method ) ->
        MethodSignature( ?method ).

CallGraphEdge(?invocation, ?tomethod) ->
			   MethodInvocation(?invocation),
			   MethodSignature(?tomethod).

AssignNormalHeapAllocation(?heap, ?var, ?inmethod) ->
  HeapAllocation(?heap), Var(?var), MethodSignature(?inmethod).

AssignAuxiliaryHeapAllocation(?heap, ?var, ?inmethod) ->
  HeapAllocation(?heap), Var(?var), MethodSignature(?inmethod).

AssignContextInsensitiveHeapAllocation(?heap, ?var, ?inmethod) ->
  HeapAllocation(?heap), Var(?var), MethodSignature(?inmethod).

SystemThreadGroup( ?heap) ->
  HeapAllocation(?heap).

MainThreadGroup( ?heap) ->
   HeapAllocation(?heap).

MainThread( ?heap) ->
  HeapAllocation(?heap).
