/**
 * If S is an ordinary (nonarray) class, then
 * - S must be the same class as T
 * - or a subclass of T
 */
CheckCast(?s, ?s) <-
   ClassType(?s).

CheckCast(?s, ?t) <-
   Subclass(?t, ?s).

/**
 * If T is an interface type, then
 * - S must implement interface T
 */
CheckCast(?s, ?t) <-
   ClassType(?s),
   Superinterface(?t, ?s).

/**
 * If S is an interface type, then
 * - If T is a class type, then T must be Object
 */
CheckCast(?s, t) <-
   InterfaceType(?s),
   Type:fqn(t:"java.lang.Object").

/**
 * If T is an interface type, then
 * - T must be the same interface as S
 * - or a superinterface of S
 */
CheckCast(?s, ?s) <-
   InterfaceType(?s).

CheckCast(?s, ?t) <-
   InterfaceType(?s),
   Superinterface(?t, ?s).

/**
 *  If S is a class representing the array type SC[], that is an array of
 *  components of type SC, then
 *  - If T is a class type, then T must be Object
 */
CheckCast(?s, ?t) <-
   ArrayType(?s),
   Type:fqn(?t:"java.lang.Object").

/**
 *  If T is an array type TC[], that is, an array of components of type TC,
 *  then one of the following must be true
 *  - TC and SC are the same primitive type
 */
CheckCast(?s, ?t) <-
   ArrayType(?s),
   ArrayType(?t),
   ComponentType[?s] = ?sc,
   ComponentType[?t] = ?sc,
   PrimitiveType(?sc).

/**
 * - TC and SC are reference types (2.4.6), and type SC can be cast to TC by
 * recursive application of these rules
 */
CheckCast(?s, ?t) <-
   ComponentType[?s] = ?sc,
   ComponentType[?t] = ?tc,
   ReferenceType(?sc),
   ReferenceType(?tc),
   CheckCast(?sc, ?tc).

/**
 *  If T is an interface type, T must be one of the interfaces implemented by
 *  arrays (2.15)
 */
CheckCast(?s, ?t) <-
   ArrayType(?s),
   InterfaceType(?t),
   Type:fqn(?t:"java.lang.Cloneable").

CheckCast(?s, ?t) <-
   ArrayType(?s),
   InterfaceType(?t),
   Type:fqn(?t:"java.io.Serializable").


/**
 *  Null type acts as a bottom type
 */
CheckCast(?s, ?t) <-
   Type:null[] = ?s,
   ReferenceType(?t),
   ?t != ?s.


/**
 * Subtyping among Primitive Types
 */
CheckCast(Type:float[], Type:double[]).
CheckCast(Type:long[], Type:float[]).
CheckCast(Type:int[], Type:long[]).
CheckCast(Type:char[], Type:int[]).
CheckCast(Type:short[], Type:int[]).
CheckCast(Type:byte[], Type:short[]).
