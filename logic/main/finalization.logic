/**
 * For a heap allocation of an object that overrides Object.finalize, invoke
 * the method Finalizer.register to register the object for finalization. The
 * allocated object becomes the actual parameter to Finalizer.register.
 */

RecordMacro(?callerCtx, ?heap, ?hctx),
CallGraphEdge(?callerCtx, FakeInvocation:RegisterFinalize[?heap], ?calleeCtx, ?register),
MergeFinalizerRegisterContextMacro(?callerCtx, ?inmethod, ?heap, ?calleeCtx),
VarPointsTo(?hctx, ?heap, ?calleeCtx, ?formal) <-
   ReachableContext(?callerCtx, ?inmethod),
   Method:Id(?register:"<java.lang.ref.Finalizer: void register(java.lang.Object)>"),
   FormalParam[0, ?register] = ?formal,
   AllocatedObjectSupportsFinalize(?heap, ?inmethod),
   !(HeapAllocation:Merge[?heap] = _),  // the object retains its identity
   ObjectShouldNotBeRefined(?heap).

#ifdef RecordRefinedMacro
RecordRefinedMacro(?callerCtx, ?heap, ?hctx),
CallGraphEdge(?callerCtx, FakeInvocation:RegisterFinalize[?heap], ?calleeCtx, ?register),
MergeFinalizerRegisterContextMacro(?callerCtx, ?inmethod, ?heap, ?calleeCtx),
VarPointsTo(?hctx, ?heap, ?calleeCtx, ?formal) <-
   ReachableContext(?callerCtx, ?inmethod),
   Method:Id(?register:"<java.lang.ref.Finalizer: void register(java.lang.Object)>"),
   FormalParam[0, ?register] = ?formal,
   AllocatedObjectSupportsFinalize(?heap, ?inmethod),
   !(HeapAllocation:Merge[?heap] = _),  // the object retains its identity
   ObjectShouldBeRefined(?heap).
#endif
