// In this analysis, the real context is a HeapAllocation AND a
// MethodInvocation (for static calls) sometimes. Keeping mapping functions is
// the way to handle analyses where HContext = Context (since the language
// considers them different types).
// NOTE: Changed from HeapAllocation to CallGraphEdgeSource in order to use the
// invocation site for static calls.
ContextFromRealContext[?heap] = ?ctx ->
  Context(?ctx), CallGraphEdgeSource(?heap).
lang:skolem(`ContextFromRealContext).
// NOTE: Use the following when using both the normal (caller's) context
// and the invocation site for static calls.
SpecialContextFromRealContext[?invocation, ?heap] = ?ctx ->
  Context(?ctx), CallGraphEdgeSource(?invocation), CallGraphEdgeSource(?heap).
lang:skolem(`SpecialContextFromRealContext).
RealContextFromContext[?ctx] = ?heap ->
  Context(?ctx), CallGraphEdgeSource(?heap).

// This analysis has no context for heap objects. This is emulated by creating
// a single HContext object, which is used everywhere.
HContextFromRealHContext[] = ?hctx -> HContext(?hctx).
lang:skolem(`HContextFromRealHContext).
