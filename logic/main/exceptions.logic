/*****************************************************************************
 * Throw statements
 *****************************************************************************/

/**
 * A method throws an exception in a context if there is a throw statement in
 * the method, and the thrown variable points to an object in this context, but
 * this object is not immediately caught by an exception handler (ThrowPointsTo
 * rule).
 * If the object is a caught, then it is assigned to the formal parameter of
 * the exeception handler (VarPointsTo rule).
 */

ThrowPointsTo(?hctx, ?heap, ?ctx, ?method) <-
   Throw(?ref, ?var),
   VarPointsTo(?hctx, ?heap, ?ctx, ?var),
   HeapAllocation:Type[?heap] = ?heaptype,
   !(ExceptionHandler:At[?heaptype, ?ref]=_),
   Instruction:Method[?ref] = ?method.

VarPointsTo(?hctx, ?heap, ?ctx, ?param) <-
   Throw(?ref, ?var),
   VarPointsTo(?hctx, ?heap, ?ctx, ?var),
   HeapAllocation:Type[?heap] = ?heaptype,
   ExceptionHandler:At[?heaptype, ?ref] = ?handler,
   ExceptionHandler:FormalParam[?handler] = ?param.

/*****************************************************************************
 * Method invocations
 *****************************************************************************/

/**
 * A method M1 throws an exception in a context if there is a call graph edge
 * from an invocation in M1 to some method M2 and the method M2 throws a an
 * exception for this specific (context-sensitive) call graph edge. Also, the
 * exception should not be caught immediately by an exception handler in M1
 * (ThrowPointsTo rule).
 * If there is such an exception handler, then the exception object is assigned
 * to the formal parameter of the exception handler (VarPointsTo rule).
 */

ThrowPointsTo(?hctx, ?heap, ?callerCtx, ?callerMethod) <-
   CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
   HeapAllocation:Type[?heap] = ?heaptype,
   !(ExceptionHandler:At[?heaptype,?invocation]=_),
   Instruction:Method[?invocation] = ?callerMethod.

VarPointsTo(?hctx, ?heap, ?callerCtx, ?param) <-
   CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
   HeapAllocation:Type[?heap] = ?heaptype,
   ExceptionHandler:At[?heaptype,?invocation] = ?handler,
   ExceptionHandler:FormalParam[?handler] = ?param.
