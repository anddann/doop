/**
 * There is no variable without a declared type
 */
!(Var(?var), !(Var:Type[?var]=_)).

/**
 * There is no variable in VarPointsTo that is not reachable
 */
Sanity:ReachableVar(?var) <-
   Reachable(?method), Var:DeclaringMethod(?var, ?method).

!(Var(?var), VarPointsTo(_, _, _, ?var), !(Sanity:ReachableVar(?var))).

/**
 * Every type is an array type, an interface type, a primitive type, or a class type
 */
!(Type(?x), !ConcreteType(?x)).

ConcreteType(?x) -> Type(?x).
ConcreteType(?x) <-
   InterfaceType(?x);
   ClassType(?x);
   ArrayType(?x);
   PrimitiveType(?x);
   NullType(?x).

/**
 * Every instruction is a concrete instruction
 */
!(Instruction(?x), !ConcreteInstruction(?x)).

ConcreteInstruction(?x) -> Instruction(?x).
ConcreteInstruction(?x) <- 
   MethodInvocation(?x);
   HeapAllocation(?x);
   Throw:Insn(?x).

/**
 * Every heap allocation has a type
 */
!(HeapAllocation(?x), !(HeapAllocation:Type[?x]=_)).

/**
 * Helpful macro for debugging. Should be empty.
 */
!(WhatAreWeMissing(_)).

WhatAreWeMissing(?heap) -> HeapAllocation(?heap).
WhatAreWeMissing(?heap) <- 
   HeapAllocation(?heap),
   !exists DeclaringClass:Allocation[?heap].
