// The real context is a HeapAllocation OR a MethodInvocation (for static
// calls). Keeping mapping functions is the way to handle analyses where
// HContext = Context (since the language considers them different types).
ContextFromRealContext[?heapComp] = ?ctx ->
  Context(?ctx), ContextComponent(?heapComp).
lang:skolem(`ContextFromRealContext).
RealContextFromContext[?ctx] = ?heapComp ->
  Context(?ctx), ContextComponent(?heapComp).
RealContextFromContext[?ctx] = ?heapComp <-
  ContextFromRealContext[?heapComp] = ?ctx.

// This analysis has no context for heap objects. This is emulated by creating
// a single HContext object, which is used everywhere.
HContextFromRealHContext[] = ?hctx -> HContext(?hctx).
lang:skolem(`HContextFromRealHContext).
