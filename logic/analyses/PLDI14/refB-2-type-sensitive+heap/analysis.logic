RealContext1FromContext[?ctx] = ?type1,
RealContext2FromContext[?ctx] = ?type2 <-
  ContextFromRealContext[?type1, ?type2] = ?ctx.

RealHContextFromHContext[?hctx] = ?type <-
  HContextFromRealHContext[?type] = ?hctx.

InitialTypeValue[] = ?initType <-
  Type:fqn(?initType:"<<initial-context>>").

Context(?ctx),
ContextFromRealContext[?type, ?type] = ?ctx,
ImmutableContext[] = ?ctx <-
  Type:fqn(?type, "<<immutable-context>>").

HContext(?hctx),
HContextFromRealHContext[?type] = ?hctx,
ImmutableHContext[] = ?hctx <-
  Type:fqn(?type, "<<immutable-hcontext>>").


// Create initial objects with their heap contexts
HContext(?hctx),
HContextFromRealHContext[?type] = ?hctx,
SystemThreadGroup(?hctx, ?alloc) <-
  Type:fqn(?type, "<<jvm-startup>>"),
  HeapAllocationValue(?alloc, "<<system-thread-group>>").

HContext(?hctx),
HContextFromRealHContext[?type] = ?hctx,
MainThreadGroup(?hctx, ?alloc) <-
  Type:fqn(?type, "<<jvm-startup>>"),
  HeapAllocationValue(?alloc, "<<main-thread-group>>").

HContext(?hctx),
HContextFromRealHContext[?type] = ?hctx,
MainThread(?hctx, ?alloc) <-
  Type:fqn(?type, "<<jvm-startup>>"),
  HeapAllocationValue(?alloc, "<<main-thread>>").


// Initially reachable methods
Context(?ctx),
ContextFromRealContext[?type1, ?type2] = ?ctx,
ReachableContext(?ctx, ?method) <-
  MainMethodDeclaration(?method),
  ClassTypeValue(?type1, "java.lang.String"),
  Type:fqn(?type2:"<<initial-context>>").

Context(?ctx),
ContextFromRealContext[?type1, ?type2] = ?ctx,
ReachableContext(?ctx, ?method) <-
  ImplicitReachable(?method),
  ClassTypeValue(?type1, "java.lang.String"),
  Type:fqn(?type2:"<<jvm-startup>>").

Context(?ctx),
ContextFromRealContext[?type1, ?type2] = ?ctx,
ReachableContext(?ctx, ?clinit) <-
  InitializedClass(?class),
  ClassInitializer[?class] = ?clinit,
  ClassTypeValue(?type1, "java.lang.String"),
  Type:fqn(?type2:"<<class-initialization>>").
