#include "../library/fact-macros.logic"

#define RecordMacro(ctx, heap, hctx) \
  HContext(hctx), \
  HContextFromRealHContext[RealContext1FromContext[ctx], \
                           RealContext2FromContext[ctx]] = hctx

#define RecordImmutableMacro(ctx, heap, immCtx) \
  HContext(immCtx), \
  HContextFromRealHContext[ImmutableHeapValue[], ImmutableInvValue[]] = immCtx


// There are actually interesting questions/choices about many of these.
#define MergeMacro(callerCtx, invocation, hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[heap, invocation] = calleeCtx

#define MergeStaticMacro(callerCtx, invocation, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[RealContext1FromContext[callerCtx], \
                         RealContext2FromContext[callerCtx]] = calleeCtx

#define MergeThreadStartMacro(hctx, heap, callerCtx, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[heap, RealContext2FromContext[callerCtx]] = newCtx

#define MergeStartupMacro(hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[heap, RealHContext2FromHContext[hctx]] = calleeCtx

#define MergeFinalizerRegisterContextMacro(callerCtx, inmethod, heap, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[heap, \
                         RealContext2FromContext[callerCtx]] = newCtx
