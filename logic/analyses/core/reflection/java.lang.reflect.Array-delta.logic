/**
 * TODO Handle version for multiarray? If yes, add to ReifiedClass as well
 */
+TempDelta(?invocation, ?arrayType, ?arrayType, ?arrayHeapStr),
+java:lang:reflect:Array:newInstance(?invocation, ?to, ?param) <-
  MethodSignature:Value(?sig:"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>"),
  MethodInvocation:Signature[?invocation] = ?sig,
  StaticMethodInvocation:Insn(?invocation),
  AssignReturnValue[?invocation] = ?to,
  ActualParam[0, ?invocation] = ?param,
  ArrayType(?arrayType),
  ReflectiveArrayMacro(?invocation, ?arrayType, ?arrayType, ?arrayHeapStr, "").

+LoadArrayIndex(?array, ?value, ?inmethod)/*,
+java:lang:reflect:Array:get(?invocation)*/ <-
  MethodSignature:Value(?sig:"<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>"),
  StaticMethodInvocation(?invocation, ?sig, ?inmethod),
  ActualParam@previous[0, ?invocation] = ?array,
  AssignReturnValue[?invocation] = ?value.

+StoreArrayIndex(?value, ?array, ?inmethod)/*,
+java:lang:reflect:Array:set(?invocation)*/ <-
  MethodSignature:Value(?sig:"<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>"),
  StaticMethodInvocation(?invocation, ?sig, ?inmethod),
  ActualParam@previous[0, ?invocation] = ?array,
  ActualParam@previous[2, ?invocation] = ?value.
