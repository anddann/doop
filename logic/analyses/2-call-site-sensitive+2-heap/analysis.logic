// Context-sensitive pointer analysis with context of 2 call site and
// a context-sensitive heap abstraction of 2 call sites

RealContext1FromContext[?ctx] = ?invocation1,
RealContext2FromContext[?ctx] = ?invocation2 <-
  ContextFromRealContext[?invocation1, ?invocation2] = ?ctx.

RealHContext1FromHContext[?hctx] = ?invocation1,
RealHContext2FromHContext[?hctx] = ?invocation2 <-
  HContextFromRealHContext[?invocation1, ?invocation2] = ?hctx.

Context(?ctx),
ContextFromRealContext[?invo, ?invo] = ?ctx,
ImmutableContext[] = ?ctx <-
  MethodInvocationValue(?invo, "<<immutable-context>>").

HContext(?hctx),
HContextFromRealHContext[?invo, ?invo] = ?hctx,
ImmutableHContext[] = ?hctx <-
  MethodInvocationValue(?invo, "<<immutable-hcontext>>").


// Create initial objects with their heap contexts
HContext(?hctx),
HContextFromRealHContext[?invo, ?invo] = ?hctx,
SystemThreadGroup(?hctx, ?alloc) <-
  MethodInvocationValue(?invo, "<<jvm-startup>>"),
  Value:byId["<<system-thread-group>>"] = ?alloc.

HContext(?hctx),
HContextFromRealHContext[?invo, ?invo] = ?hctx,
MainThreadGroup(?hctx, ?alloc) <-
  MethodInvocationValue(?invo, "<<jvm-startup>>"),
  Value:byId["<<main-thread-group>>"] = ?alloc.

HContext(?hctx),
HContextFromRealHContext[?invo, ?invo] = ?hctx,
MainThread(?hctx, ?alloc) <-
  MethodInvocationValue(?invo, "<<jvm-startup>>"),
  Value:byId["<<main-thread>>"] = ?alloc.

StartupInvocation[] = ?startupInvocation <-
  MethodInvocationValue(?startupInvocation, "<<jvm-startup>>").

// Merge optimization hack

// Better to do the join twice than to waste the space for a full MergeBasis
// relation for this analysis.
lang:derivationType[`MergeBasis] = "Derived".
// For this analysis, we only need two of the parameters that may influence the
// new context object.
MyMergeBasis(?callerCtx, ?invocation) <-
  MergeBasis(_, _, ?callerCtx, ?invocation).

// We create new context objects sparingly, because of the high cost.  We also
// cache them, so they can be looked up without a join.
Context(?calleeCtx),
ContextFromRealContext[RealContext2FromContext[?callerCtx], ?invocation] = ?calleeCtx,
OptimizeMerge[?callerCtx, ?invocation] = ?calleeCtx <-
  MyMergeBasis(?callerCtx, ?invocation).


// Initially reachable methods
Context(?ctx),
ContextFromRealContext[?invo, ?invo] = ?ctx,
ReachableContext(?ctx, ?method) <-
  MainMethodDeclaration(?method),
  MethodInvocationValue(?invo, "<<initial-context>>").

Context(?ctx),
ContextFromRealContext[?invo, ?invo] = ?ctx,
ReachableContext(?ctx, ?method) <-
  ImplicitReachable(?method),
  MethodInvocationValue(?invo, "<<jvm-startup>>").

Context(?ctx),
ContextFromRealContext[?invo, ?invo] = ?ctx,
ReachableContext(?ctx, ?clinit) <-
  InitializedClass(?class),
  ClassInitializer[?class] = ?clinit,
  MethodInvocationValue(?invo, "<<class-initialization>>").
