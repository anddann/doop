// In this analysis, the real context and the real heap context is a triplet of
// Types. Keeping mapping functions is the way to handle analyses where
// HContext = Context (since the language considers them different types).  The
// type is not always a class type, because of arrays currently being a
// non-class subtype of Object
ContextFromRealContext[?type1, ?type2, ?type3] = ?ctx ->
  Context(?ctx), Type(?type1), Type(?type2), Type(?type3).
lang:constructor(`ContextFromRealContext).
RealContext1FromContext[?ctx] = ?type ->
  Context(?ctx), Type(?type).
RealContext2FromContext[?ctx] = ?type ->
  Context(?ctx), Type(?type).
RealContext3FromContext[?ctx] = ?type ->
  Context(?ctx), Type(?type).

HContextFromRealHContext[?type1, ?type2, ?type3] = ?hctx ->
  HContext(?hctx), Type(?type1), Type(?type2), Type(?type3).
lang:constructor(`HContextFromRealHContext).
RealHContext1FromHContext[?hctx] = ?type ->
  HContext(?hctx), Type(?type).
RealHContext2FromHContext[?hctx] = ?type ->
  HContext(?hctx), Type(?type).
RealHContext3FromHContext[?hctx] = ?type ->
  HContext(?hctx), Type(?type).
