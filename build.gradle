apply plugin: 'antlr'
apply plugin: 'application'
apply plugin: 'groovy'
//apply plugin: 'ivy-publish'

//applicationDefaultJvmArgs = ["-Xmx2048m"]
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

//project.group = "plast-lab"
//project.version = 1.0

//For the doop app
mainClassName = 'doop.Main'


task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

repositories {
    mavenCentral()
}

def sootClassesJar = file('lib/sootclasses-2.5.0.jar')
def jphantomJar = file('lib/jphantom-1.1-jar-with-dependencies.jar')
def antlrJar = file('lib/antlr-4.5.1-complete.jar')

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.3.10",            // Groovy
            "commons-logging:commons-logging:1.1",              // Logging wrapper
            "log4j:log4j:1.2.14",                               // Logging implementation
            "commons-cli:commons-cli:1.2",                      // Command line processor
            "org.anarres:jcpp:1.4.5",                           // C preprocessor in Java
            "commons-io:commons-io:2.4",                        // File Utils
            "org.apache.ivy:ivy:2.3.0",                         // Apache Ivy (for downloading jars from maven repos)
            "org.ow2.asm:asm-debug-all:5.0.3"                   // Java Bytecode library

    compile files(sootClassesJar)                               // Soot is a compile time dependency
    compile files(antlrJar)                                     // Antlr is also a compile time dependency

    runtime files(jphantomJar, 'lib/averroes-no-properties.jar')

    // DeepDoop
    antlr "org.antlr:antlr4:4.5.1-1"
    compile "org.antlr:antlr4-runtime:4.5.1-1"
    testCompile "junit:junit:4.12"
}

task generateFiles(type: JavaExec) {
    description "Generate the doop.properties & checksums.properties files"
    group = "Other"
    main = 'doop.FileGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args = [
        projectDir,
        sootClassesJar,
        jphantomJar
    ]
}

applicationDistribution.from(file("$projectDir/logic")) {
    into "logic"
}
applicationDistribution.from(projectDir) {
    include "doop.properties", "checksums.properties", "LICENSE"
}


run {
    dependsOn generateFiles
    //We set the DOOP_HOME environment variable (see doop.Main)
    environment.DOOP_HOME = projectDir
    if(project.hasProperty("args")) {
        args project.property("args").split()
    }
}

task deepdoop(type: JavaExec) {
    description 'Run DeepDoop'
    group = 'Other'
    main = 'org.clyze.deepdoop.Main'
    classpath = sourceSets.main.runtimeClasspath
    enableAssertions = true
    if(project.hasProperty("args")) {
        args project.property("args").split()
    }
}

compileJava {
    options.compilerArgs << '-Xlint:unchecked'
}

//startScripts {
//    dependsOn generateFiles
//}

//publishing {
//    repositories {
//        ivy {
//            name "local-ivy-repo"
//            url "../ivy-repo"
//        }
//    }
//
//    publications {
//
//        doop(IvyPublication) {
//            organisation "$group"
//            module "doop"
//            revision "$version"
//            from components.java
//        }
//    }
//}
