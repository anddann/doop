#!/bin/bash

# We don't want the first 4 lines from stderr. The rest output of stderr might
# have interesting messages though (i.e. errors). Use |& which pipes stderr
# instead of stdout.
$LOGICBLOX_HOME/bin/bloxbatch "$@" |& tail -n +5

# Another way to achieve that, in which we swap stdout and stderr using a third
# file descriptor (3). In the end, 3>&- closes the extraneous file descriptor.
#$LOGICBLOX_HOME/bin/bloxbatch "$@" 3>&1 1>&2 2>&3 3>&- | tail -n +5

# Because of piping, normally the exit status is that of tail. We want the exit
# status of the first (0) command in the pipe sequence (bloxbatch)
exit ${PIPESTATUS[0]}
